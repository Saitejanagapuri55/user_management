name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10] # Use Python 3.10
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myappdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Wait for Postgres to be ready
        run: |
          echo "Waiting for Postgres to start..."
          sleep 10

      - name: Run Tests with Pytest
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/myappdb
        run: pytest --maxfail=1 --disable-warnings

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: saitejas0511@gmail.xcom
          password: Sailentt@55
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: saitejanagapuri/user_management_sai:${{ github.sha }}
