name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  test:
    name: Test with Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.12]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myappdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d myappdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Wait for PostgreSQL to be Ready
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h localhost -p 5432 -U user; do
            echo "PostgreSQL is not ready yet. Retrying..."
            sleep 5
          done
          echo "PostgreSQL is ready!"

      # Step 5: Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=postgresql+asyncpg://user:password@localhost:5432/myappdb" >> $GITHUB_ENV

      # Step 6: Run Tests with Pytest
      - name: Run Tests with Pytest
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/myappdb
          PYTHONPATH: "${{ github.workspace }}"  # Add the root directory to PYTHONPATH
        run: pytest --maxfail=1 --disable-warnings

